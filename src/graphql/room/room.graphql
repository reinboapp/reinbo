type Room {
  _id: ID

  roomname: String # Public, like username
  name: String
  description: String
  isGroup: Boolean
  isSecret: Boolean

  owner: ID
  admins: [User]
  members: [User]
  channels: [Channel]

  tags: [String]

  createdAt: String
  updatedAt: String
}

input RoomQueryInput {
  _id: ID
  roomname: String # Public, like username
  name: String
  description: String
  tags: [String]
  isGroup: Boolean
  isSecret: Boolean
}

input RoomMutationInput {
  roomname: String # Public, like username
  name: String
  description: String

  isGroup: Boolean
  isSecret: Boolean

  members: [ID]
  admins: [ID]
  owner: ID
}

type Query {
  roomMine: [Room!]!
  roomFind(input: RoomQueryInput!): [Room!]!
  roomFindOne(input: RoomQueryInput!): Room!
}

type Mutation {
  roomCreate(input: RoomMutationInput!): Room!
  roomUpdate(id: ID!, input: RoomMutationInput!): Room!
  roomDelete(id: ID!): Boolean!

  roomJoin(id: ID!): Room!
  roomLeave(id: ID!): Boolean!
  roomKickUser(id: ID!, userId: ID!): Boolean!
}
